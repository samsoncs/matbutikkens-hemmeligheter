---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { format, isAfter } from "date-fns";
import Link from "../../../../lib/common/Link.astro";
import { getAllEpisodes } from "../../../../lib/common/episodes/episodes";
import EpisodeImage from "../../../../lib/common/episodes/EpisodeImage.astro";
import EpisodeIdentifier from "../../../../lib/common/episodes/EpisodeIdentifier.astro";
import EpisodeKeyStats from "../../../../lib/common/episodes/EpisodeKeyStats.astro";
import PrevEpisode from "./_components/PrevEpisode.astro";
import NextEpisode from "./_components/NextEpisode.astro";
import ChevronLeftIcon from "../../../../lib/common/icons/ChevronLeftIcon.astro";

export async function getStaticPaths() {
  const episodes = getAllEpisodes();
  return episodes.map((e, i) => {
    const prevEpisode = episodes.length > i - 1 ? episodes[i - 1] : undefined;
    const nextEpisode = episodes.length >= i + 1 ? episodes[i + 1] : undefined;
    return {
      params: { season: e.season, episode: e.id },
      props: { episode: e, prevEpisode, nextEpisode },
    };
  });
}

const { episode, prevEpisode, nextEpisode } = Astro.props;
---

<BaseLayout
  bgFrom={episode.fromColor}
  bgTo={episode.toColor}
  accent={episode.accentColor}
  title={`Episode ${episode.number} S${episode.season} - ${episode.name}`}
  description={episode.description}
  image={episode.cover}
  noMaxWidth
>
  <nav class="max-w-6xl mx-auto px-2 md:pt-2 md:pb-2">
    <div class="inline-block">
      <Link
        class="flex items-center gap-2 text-[var(--accent)] hover:underline font-bold mb-2"
        href={`episodes/season/${episode.season}`}
      >
        <ChevronLeftIcon />
        Tilbake til sesong {episode.season}
      </Link>
    </div>
  </nav>
  <div class="max-w-3xl mx-auto px-2">
    <section class="mb-6">
      <div class="flex flex-col items-center gap-8 mb-2">
        <div class="w-full">
          <EpisodeImage episode={episode} size={{ width: 300, height: 300 }} />
        </div>
      </div>
      <h1 class="md:pt-4 text-3xl font-bold text-[var(--accent)] mb-2">
        {episode.name}
      </h1>
      <div class="">
        <div
          style={{ color: episode.accentColor }}
          class="font-semibold mb-4 flex gap-2 items-center mb-1"
        >
          <EpisodeIdentifier episode={episode} />
          <EpisodeKeyStats episode={episode} />
        </div>
        <p>
          {episode.description}
        </p>
      </div>
    </section>
    <section class="max-w-3xl mx-auto flex flex-col gap-4 px-2">
      <div class="bg-black/5 p-4 grow rounded-2xl">
        <h2 class="text-lg font-bold text-[var(--accent)] mb-3">
          Flere episoder
        </h2>
        <div class="grid grid-cols-2">
          <div>
            {
              prevEpisode && (
                <PrevEpisode originEpisode={episode} episode={prevEpisode} />
              )
            }
          </div>
          <div>
            {!prevEpisode && <div aria-hidden="true" />}
            {
              nextEpisode && (
                <NextEpisode originEpisode={episode} episode={nextEpisode} />
              )
            }
            {!nextEpisode && <div aria-hidden="true" />}
          </div>
        </div>
      </div>
    </section>
  </div>
</BaseLayout>
