---
import Link from "../../lib/common/Link.astro";
import CrossIcon from "./Navbar/CrossIcon.astro";
import HamburgerIcon from "./Navbar/HamburgerIcon.astro";
import Logo from "./Navbar/Logo.astro";
import MenuLinks from "./Navbar/MenuLinks.astro";
---

<nav
  id="site-nav"
  class={`sticky top-0 z-30 text-[var(--accent)] mb-2 transition-all duration-100 ease-in-out`}
>
  <div class="flex items-center mx-auto max-w-6xl p-4 font-bold relative">
    <div class="flex-grow">
      <!-- TODO: Don't use H3 to change style, use tailwind class for font -->
      <h3 class="text-2xl">
        <Link href="">
          <Logo />
        </Link>
      </h3>
    </div>
    <MenuLinks orientation="horizontal" classes="hidden md:flex" />
    <div class="md:hidden">
      <button
        id="nav-toggle-hamburger"
        class="text-emerald-800 cursor-pointer"
        aria-label="Åpne meny"
        aria-controls="mobile-drawer"
        aria-expanded="false"
      >
        <HamburgerIcon />
      </button>
    </div>
  </div>
</nav>
<label
  id="nav-toggle-drawer-click-target"
  aria-hidden="true"
  class="fixed inset-0 z-40 bg-black/60 backdrop-blur-sm opacity-0 pointer-events-none transition-opacity peer-checked:opacity-100 peer-checked:pointer-events-auto"
></label>
<aside
  id="mobile-drawer"
  class="bg-[var(--bg-from)]/95 bg-gradient-to-br from-[var(--bg-from)]/95 to-[var(--bg-to)]/95 backdrop-blur shadow-md/5 fixed top-0 right-0 z-50 h-dvh w-3/4 max-w-xs border-l border-black/10 shadow-xl translate-x-full peer-checked:translate-x-0 transition-transform duration-300 ease-out will-change-transform flex flex-col pl-6 pr-4 py-4 gap-6"
>
  <div class="flex justify-between items-center">
    <Link href="">
      <Logo />
    </Link>
    <button
      id="nav-toggle-close"
      class="cursor-pointer text-emerald-800"
      aria-label="Lukk meny"
      aria-controls="mobile-drawer"
      aria-expanded="false"
    >
      <CrossIcon />
    </button>
  </div>
  <MenuLinks orientation="vertical" classes="flex md:hidden" />
</aside>
<script>
  function initNavbar() {
    const drawer = document.getElementById("mobile-drawer");
    const hamburger = document.getElementById("nav-toggle-hamburger");
    const closeButton = document.getElementById("nav-toggle-close");
    const closeClickTarget = document.getElementById(
      "nav-toggle-drawer-click-target",
    );

    if (!drawer || !hamburger || !closeButton || !closeClickTarget) return;
    if (hamburger.dataset.navInit === "true") return; // prevent duplicate bindings
    hamburger.dataset.navInit = "true";

    function escListener(e: KeyboardEvent) {
      if (e.key === "Escape") {
        const isOpen = hamburger!.getAttribute("aria-expanded") === "true";
        if (isOpen) toggleMenu();
      }
    }

    function setState(next: boolean) {
      hamburger!.setAttribute("aria-expanded", next ? "true" : "false");
      closeButton!.setAttribute("aria-expanded", next ? "true" : "false");
      hamburger!.setAttribute("aria-label", next ? "Lukk meny" : "Åpne meny");
      closeButton!.setAttribute("aria-label", next ? "Lukk meny" : "Åpne meny");

      drawer!.classList.toggle("translate-x-full", !next);
      drawer!.classList.toggle("translate-x-0", next);

      closeClickTarget!.classList.toggle("opacity-0", !next);
      closeClickTarget!.classList.toggle("opacity-100", next);
      closeClickTarget!.classList.toggle("pointer-events-none", !next);
      closeClickTarget!.classList.toggle("pointer-events-auto", next);

      if (next) {
        const firstLink = drawer!.querySelector("a");
        firstLink && firstLink.focus();
        document.addEventListener("keydown", escListener);
      } else {
        document.removeEventListener("keydown", escListener);
        hamburger!.focus();
      }
    }

    function toggleMenu() {
      const isOpen = hamburger!.getAttribute("aria-expanded") === "true";
      setState(!isOpen);
    }

    setState(false);

    hamburger.addEventListener("click", toggleMenu);
    closeButton.addEventListener("click", toggleMenu);
    closeClickTarget.addEventListener("click", toggleMenu);
    document.addEventListener("astro:before-swap", () => setState(false));
  }

  document.addEventListener("astro:page-load", initNavbar);
  document.addEventListener("astro:after-swap", initNavbar);
</script>
