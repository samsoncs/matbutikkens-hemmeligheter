---
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import EpisodeCard from "../../../../lib/common/episodes/EpisodeCard.astro";
import {
  getAllSeasons,
  getSeasonEpisodes,
} from "../../../../lib/common/episodes/episodes";
import Link from "../../../../lib/common/Link.astro";

export async function getStaticPaths() {
  const seasons = getAllSeasons();

  return seasons.map((s) => {
    const episodes = getSeasonEpisodes(s);
    return {
      params: { season: s },
      props: { seasons, currentSeason: s, episodes },
    };
  });
}

const { currentSeason, seasons, episodes } = Astro.props;

const now = new Date();
const newestPublishedInSeason = [...episodes]
  .reverse()
  .find((e) => new Date(e.published) <= now);
---

<BaseLayout
  title={`Sesong ${currentSeason} - Matbutikkens Hemmeligheter (podcast for barn 3–7 år)`}
  description={` Episoder i sesong {N} av barnepodkasten om matglede, vennskap og fantasi for barn 3–7 år.`}
  bgFrom="oklch(98.6% 0.031 120.757)"
  bgTo="oklch(96.9% 0.015 12.422)"
  accent="oklch(59.6% 0.145 163.225)"
>
  <div class="max-w-3xl mx-auto">
    <div class="w-full flex gap-4 mb-8 pl-3">
      {
        seasons.map((s) => (
          <Link
            href={`episodes/season/${s}`}
            class={`${s === currentSeason ? "bg-emerald-800 ring-3 ring-emerald-700 hover:bg-emerald-800 text-white" : "text-emerald-800"} font-semibold px-4 py-1 rounded-full hover:cursor-pointer transition active:translate-y-[1px] hover:shadow-lg hover:scale-[1.02]`}
          >
            {`Sesong ${s}`}
          </Link>
        ))
      }
    </div>

    <div class="flex flex-col gap-8 mb-8">
      {
        episodes.map((episode) => (
          <EpisodeCard
            isCurrent={newestPublishedInSeason?.id === episode.id}
            episode={episode}
          />
        ))
      }
    </div>
  </div>
</BaseLayout>
