---
import { Image } from "astro:assets";
import { format } from "date-fns";
import Link from "./Link.astro";
import type { Episode } from "./episodes/types";
import { isEpisodePublished, getUpcomingLabel } from "./episodes/episodes";

interface Props {
  episode: Episode;
  isCurrent?: boolean;
}

const {
  episode,
  episode: {
    id,
    season,
    name,
    length,
    cover: image,
    shortDescription,
    fromColor: background,
    accentColor: accent,
  },
  isCurrent,
} = Astro.props;

function oklchWithAlpha(color: string, alpha = 0.55) {
  if (!color) return color;
  if (!color.startsWith("oklch(")) return color;
  if (/\/\s*\d*\.?\d+\s*\)/.test(color)) return color;
  return color.replace(/oklch\(([^)]+)\)/, (_, inner) => {
    const trimmed = inner.trim();
    return `oklch(${trimmed} / ${alpha})`;
  });
}
const isUpcoming = !isEpisodePublished(episode);
let upcomingLabel = getUpcomingLabel(episode);

const translucentBg = isUpcoming
  ? oklchWithAlpha("oklch(70.7% 0.022 261.325)", 0.25)
  : oklchWithAlpha(background, 0.4);

const accentColor = isUpcoming ? "oklch(37.3% 0.034 259.733)" : accent;
const formattedPublishDate = format(episode.published, "dd.MM.yyyy");
---

<div
  class="overflow-hidden bg-white rounded-4xl shadow-xl shadow-emerald-800/5 flex flex-col sm:grid sm:grid-cols-12"
  style={{
    border: isCurrent
      ? `4px solid color-mix(in oklch, ${accentColor} 80%, transparent)`
      : undefined,
    boxShadow: isCurrent
      ? `0 0 15px color-mix(in oklch, ${accentColor} 50%, transparent)`
      : undefined,
  }}
>
  <div class="relative col-span-4 md:col-span-3 flex justify-center">
    <Image
      class={`inset-0 w-full h-40 sm:h-full object-cover transition-opacity duration-300 ${
        isUpcoming ? "opacity-60" : ""
      }`}
      src={image}
      width={300}
      height={300}
      alt={`Illustrasjon for episoden ${name}`}
    />
    {
      upcomingLabel && (
        <>
          <div class="absolute inset-0 bg-black/55 backdrop-blur-[1px]" />
          <span
            class={`absolute top-4 left-5 px-3 py-1 rounded-full text-xs font-semibold tracking-wide text-white shadow-lg shadow-black/20`}
            style={{ background: "oklch(21% 0.034 264.665)" }}
          >
            ðŸ•’ {upcomingLabel}
          </span>
        </>
      )
    }
    {
      isCurrent && (
        <span
          aria-label="Ny episode"
          class={`absolute top-4 left-5 px-3 py-1 rounded-full text-xs font-semibold tracking-wide text-white shadow-lg shadow-black/20`}
          style={{ background: accentColor }}
        >
          Ny
        </span>
      )
    }
  </div>

  <div
    class="p-6 sm:py-6 sm:px-8 col-span-8 md:col-span-9 xl:pr-12"
    style={{ background: translucentBg }}
  >
    <h3
      style={{ color: accentColor }}
      class={`text-xl ${isUpcoming ? "font-normal" : "font-bold"} mb-2`}
    >
      {name}
    </h3>
    <div style={{ color: accentColor }} class="font-semibold mb-1">
      Varighet: <span class="font-normal">{length}</span>
      {
        !isUpcoming && (
          <>
            â€¢ Utgitt: <span class="font-normal">{formattedPublishDate}</span>
          </>
        )
      }
    </div>
    <p class="text-base leading-5 mb-6">
      {shortDescription}
    </p>
    <div>
      {
        !isUpcoming && (
          <Link
            href={`episodes/season/${season}/${id}`}
            class="font-semibold text-white px-4 py-2 rounded-full hover:brightness-110 transition"
            style={{ background: accentColor }}
          >
            HÃ¸r nÃ¥
          </Link>
        )
      }
    </div>
  </div>
</div>
